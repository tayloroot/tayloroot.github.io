

# 3D勘测扫描仪

## 项目背景
针对海康安防产品（闸机、摄像头等）的集成商与安装商在业务流程上从现场点位勘测到最终交付确认环节效率低下、
人工成本费用高昂的问题，该项目旨在研发一款便携式手持3D勘测扫描仪，
能够准确、鲁棒、高效的重建场景并生成3D模型，配合云端点位设计工具，
实现现场勘测数据与点位设计方案的3D数字化管理，从而达到提升服务品质与增加用户粘性的目的。

## 相关工作
在项目中，我主要负责：1、多传感器间标定；2、点云着色；3、点云语义分类；4、矢量化建模；5、矢量模型纹理映射等工作，
## 方法

### I. 设备端
#### 多传感器标定模块
- 完成相机-雷达、相机-IMU、雷达和IMU的内外参数、时延的标定
- 借助工具Kalibra，标定IMU与相机与IMU和雷达是走莫比乌斯环，其实就是对齐IMU和相机-or-雷达的估计，进而估计出对应的时延和外参
- 时延，多次标定后，发现时延波动不大，则认为标定完成(17ms)
- 雷达先用的livox-mid-70，然后用的mid-360，10HZ，一秒10个点云数据，这个雷达每个点都有时间戳，同步方式是PPS同步，每秒对齐时间戳，由CMU发出同步信号进行时间戳重置，记录CMU发出的同步信号的时间，用每秒内的相对时间加上这个绝对时间就是各点的系统时间，以上是MID-70期间的同步方式。mid360的同步交由硬件部门开发
- imu使用的最便宜的BM8000，和mid360内嵌的一致，300HZ
- 旧相机使用的全局曝光-global(对应卷帘rolling)，640*400，mono灰度相机，针孔模型，视场角比较大，100*110，像素密度较低(本来只是用的视觉SLAM定位，后续用于点云着色效果就比较差了)，帧率20HZ，一秒20张图像
- 新相机(和mid-360配套) 鱼眼相机 1600*1200 FOV：130*150，20FPS,全局曝光
- mid360点云质量不如MID70，扫描大水平面会有弯折，优势在于视角广，360*60
- 相机和雷达的标定就是手动选点，2D-3Dmatch，非线性优化，调用的opencv库，对初始值敏感，对于mid360采用了激光mark点进行辅助选点，因为点云呈现的角点太模糊，会引入较大误差
- 所有的标定判断标准都是多次重复标定，标定矩阵的波动(方差)小于指标，则认为标定完成，接受标定结果(delta_t < 0.3cm, delta_r < 1°, delta_时延 < 1ms)

#### 激光建图模块
- 基于改进的fast-lio2
- 加入了首位闭环(基于图像召回)

#### 点云后处理(着色)模块
- 点云滤波(统计滤波、半径滤波)，统计滤波原理：先对每个点划分邻域，计算各点的距离，再统计所有点的平均距离和方差，假设距离是高斯分布，对于3-sigma以外的点就进行滤除
- 点云降采样
- 点云着色：对于欧思徕和飞马机器人的着色方式解析：即为最近相机着色：对于点云中的每个点，可以计算中距离各点最近的相机，认为最近的相机就是最优的，进行着色解算；
- 改进的着色：加入遮挡判断：z-buffer或者 hidden point removal，后再进行最近相机着色
- z-buffer原理：分割出点云视锥体，然后对应相机分辨率大小的网格，对视锥体内的每个点，计算各个点对应的网格坐标，距离小的会覆盖距离大的(近处的会遮挡远处的)，遍历完成后，就拿到了未遮挡点和深度图
-  hidden point removal：反演算法

- 另一种着色方案：对每个点进行可见相机判断，将这个点再所有可见相机中的颜色取平均值后赋色，参考以下论文：
- P. Vechersky, M. Cox, P. Borges and T. Lowe, "Colourising Point Clouds Using Independent Cameras," in IEEE Robotics and Automation Letters, vol. 3, no. 4, pp. 3575-3582, Oct. 2018, doi: 10.1109/LRA.2018.2854290.
- 平均着色会造成纹理模糊，最近相机着色会造成纹理颜色跳变
- 最终的着色方案：将点云划分未平面点集和非平面点集，非平面点集采用增加了遮挡判断的最近相机着色；平面点集则，进行网格划分，引入约束：邻近的网格应该更趋向于选择邻近的相机帧，也就是说网格的相机选择和邻域网格的相机选择是强相关的，具有局部性，因此可以考虑建立马尔可夫条件随机场，建立能量函数：数据项和平滑项，数据项则是网格再相机帧下的投影面积(应该越大越好)*(-1)，平滑项时网格与领域网格的帧号选择差异，差异越大，惩罚越大；优化上述能量函数(最小割-图割法)，得到优化后的不会跳变的领域相机帧着色方案。

### II. 云端
#### 点云语义分类模块
- 将每个点区分为：地面、天花板、墙面、柱子还是障碍物
- 由于泛化原因，选择图像语义分割后，进行点云语义标记
- 点云-视点特征模块开发 模型点对应各个视点的 距离、角度、局部密度、等
- 参考论文 Damien Robert, Bruno Vallet, Loic Landrieu -Learning Multi-View Aggregation In the Wild for Large-Scale 3D Semantic Segmentation
#### 矢量化建模模块
- 矢量化定义：参考朱灵杰论文：在离散的、无序的、冗余的、噪声稠密点云数据中抽取重要的结构、拓扑、语义等信息，用简洁的紧凑的形式(如点线面曲面数学方程及其组合)进行表达，这就是矢量化建模
- 参考论文：2020-中科院-朱灵杰-大规模城市场景三维矢量化研究
- 投影拉伸的方法：将点云投影到地面平面，生成2d投影图，采用图像的形态学方法，进行滤波去噪后，再进行膨胀腐蚀，利用canny算子提取轮廓线，然后进行拉伸生成墙体
- 参考论文：2012-usc_thesis-3D URBAN MODELING FROM CITY-SCALE AERIAL LIDAR DATA
- 平面拟合生长的方法：利用区域生长算法进行平面提取,然后进行平面生长、相交、截断等解算，并进行内外表面的区分,输出水密的几何模型，主要难点在效率，三维空间的o(n2)，多采用空间二分的方式进行加速
- 区域生长算法原理：基于多源的BFS，采用优先级队列进行种子点更换
- 伪代码：
- 参考论文：KSR
- alpha-shape的生成算法：
- 混合的方案：提取墙体平面，进行投影，然后在二维欧式空间，进行直线生长、截断和选择，基于整数规划，建立能量方程，(贴合度、覆盖率等)，这是个0-1背包问题；完成线段的选择后，进行拉伸生成墙体面片；非平面区域进行平面提取和生长，后续同KSR
- 使用第三方库CGAL，二维布置 arrangement, 双边数据结构(点线面，half-edge)
- 参考论文：韩佳丽学位论文，2023-Jiali Han, Mengqi Rong, Hanqing Jiang, Hongmin Liu, Shuhan Shen. Vectorized Indoor Surface Reconstruction from 3D Point Cloud with Multistep 2D Optimization. ISPRS Journal of Photogrammetry and Remote Sensing, 177: 57-74, 2021.
- 参考论文：polyFit

#### 纹理映射
- 纹理映射的目的：恢复出模型的高保真的纹理细节，纹理映射就是将拍摄到的二维图像，准确的投影到重建的三维模型上，恢复出模型上的顶点与面片的颜色信息。
- 难点1、纹理错位：由于重建的模型会有几何误差，相机位姿会有漂移，导致投影过去的彩色纹理会出现偏差
- 难点2、纹理接缝明显：由于不同相机帧间的色差较大，出现明显的纹理接缝
- 采用方案：改进MVE方法，采用以平面为基元进行最优相机帧的选择。具体的，先参考MVE方案，基于三角面片建立数据项和平滑项，输出MRF能量方程，求解出各个三角面片对应的最优相机帧；考察每个平面，对于统计平面中各个三角面片对应的最优相机帧出现次数，选取投票最多的且包含所有面片的为该平面的最优帧。注意可能会出现最优帧无法覆盖整个平面的纹理，这时候就需要用相邻帧进行图像补全，参考opencv的图像拼接(ImageSwitch)pipeline(最优接缝解算，泊松图像编辑，拼接)。
- 事实上，由于在矢量化建模中，对于点云模型做了过多的抽象和精简，损失了较多的局部细节，比如小的局部凸起和凹陷，小的曲面等，导致以上普通的纹理映射算法已经无法完全满足要求。基于上面这种传统的纹理映射方案，想要实现非常准确的纹理恢复，就必须要基于高精度的三维面片模型(采用高精度的架站激光扫描，进行稠密三维重建)，但是这又和矢量化建模的意义相悖了。这种前后冲突的矛盾，就是后续转而研究3D-Gaussian的原因。
- 参考论文：1、2014-Let There Be Color! --- Large-Scale Texturing of 3D Reconstructions
- 参考论文：2、2023-TwinTex: Geometry-aware Texture Generation for Abstracted 3D Architectural Models
- 参考论文：3、2020-武汉大学-付燕平-面向RGB-D相机高保真三维重建与纹理映射研究

- obj的文件格式和对应的纹理渲染原理
- v 表示顶点坐标
- vn 表示法向量
- vt 表示纹理坐标
- f 表示面片顶点索引 v/vt/vn
- 纹理坐标是？

# 3D测量相机
## 项目背景
响应国电号召，为了保证野外高压输电线环境下工程车辆的施工安全，需要实时监测危险区域内车辆与输电线的距离。
项目所选用的技术路线为：首先离线扫描场景，获取场景点云模型，并完成监控相机与场景模型的外参标定；
然后利用 AI 开放平台实时输出监控图像中工程车辆的2D检测框，并解算目标与输电线间的最短距离。
## 相关工作
在项目中，我主要负责：场景参数化建模
## 方法
### 标定模块
- 利用杆塔进行2D-3D点匹配，进行外参解算

### 场景建模模块*
- 利用无人机航拍的地面点云，与相机内外参数，输出稠密准确的地面深度图，与导线的参数化模型。
- 点云模型已预先分割为了地面、杆塔、导线和其他类别
- 主要采用的方案是：对于地面点云，先通过CSF地面提取算法，区分出地表面和植被；
- 对于地表面点云，再利用区域生长算法进行大平面的提取，这里是为了提取中道路和桥梁。
- 对于剥离了桥梁和道路的地表面点云，进行delaunary三角化；
- 对于大平面的道路和桥梁进行2d投影，找到边界(findContours)，对边界进行多边形逼近(approxPolyDP),然后进行多边形三角剖分(ear-cut)
- 融合平面三角面片和地面三角面片后，进行面片投影，恢复出对应的完整的地面深度图(先计算顶点对应的像素点的深度值，利用三角形重心坐标公式进行内部像素点深度插值)
- 三角形重心坐标公式：利用三个内部三角形的面积比为权重(https://blog.csdn.net/qq_40765480/article/details/136902463)
- (delaunary 三角化 与 多边形三角剖分)
- 导线的参数方程拟合：导线点都在同个平面内，导线点到杆塔的距离和导线点的Z轴距离(高度)利用抛物线参数方程进行拟合(具体方案为：每隔50cm，进行点云截取，相当于类圆柱体，投影到杆塔平面，拟合拿到中心坐标，以此采样出一个导线中心点，获取对应的距离和高度，遍历完成后，进行抛物线参数拟合)

### 测距模块
- 利用深度学习进行车辆检测，输出检测框坐标，查表获取地面深度信息，输出到导线的物理距离

# 虚拟试衣
## 项目背景
为了降低消费者选码试衣的时间，增加购物体验，同时节省服装商成本，
并推动海康显示屏的销量。
## 相关工作
在项目中我主要负责人体姿态优化模块。
## 方法
- SMPL模型简介：人体表面蒙皮模型，82个参数，10个体型参数+24*3=72个姿态参数，6820个人体表面顶点，每个顶点
都由上述参数表达，偏移量和权重都是通过学习来的(https://0809zheng.github.io/2021/01/07/3dhuman.html)
- 现存问题：单纯的图像重建会有人体漂移抖动的问题，漂浮感严重，比较失真
- 原因：从图像重建出来的人体没有绝对坐标，都是用的相对于单张图像的相对坐标
- 方案：引入深度图，利用openpose获取人体关节点的深度信息，将smpl的关节信息与深度关节信息对齐，做ICP对齐，
缓解了漂浮感问题,具体的：先粗对齐人体关节点，然后精对齐关节点(最小二乘优化)，认为
深度图关节点是真值，而SMPL关节点是关于起始点和各个位姿参数的函数，建立
最小二乘损失函数，利用梯度下降法求解各个位姿参数






